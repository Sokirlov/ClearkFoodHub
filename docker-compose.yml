version: "3.9"
services:
  db:
    image: postgres
    container_name: 'db_clerk'
    volumes:
      - ./data/db:/var/lib/postgresql/data
#    env_file:
#      - dev.env
    environment:
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_USER: $DB_USER
      POSTGRES_DB: $DB_NAME
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", $DB_NAME, "-U", $DB_USER ]
      timeout: 3s
      retries: 5
    networks:
      - mainnetwork

  redis:
    image: redis
    restart: always
    networks:
      - mainnetwork


  web:
    build: .
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    env_file:
      - dev.env
    networks:
      - mainnetwork
    command: python start.py

  worker:
    build: .
    restart: always
    depends_on:
      - web
    env_file:
      - dev.env
    networks:
      - mainnetwork
    command: ['celery', '-A', 'ClerkFoodhub', 'worker']

  beats:
    build: .
    restart: always
    depends_on:
      - web
    env_file:
      - dev.env
    networks:
      - mainnetwork
    command: ['celery', '-A', 'ClerkFoodhub', 'beat', '-l', 'info']

networks:
  mainnetwork:
    name: "mainnetwork"